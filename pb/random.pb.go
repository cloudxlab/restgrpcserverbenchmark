// Code generated by protoc-gen-go. DO NOT EDIT.
// source: random.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Random struct {
	RandomString         string   `protobuf:"bytes,1,opt,name=RandomString,proto3" json:"RandomString,omitempty"`
	RandomInt            int32    `protobuf:"varint,2,opt,name=RandomInt,proto3" json:"RandomInt,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Random) Reset()         { *m = Random{} }
func (m *Random) String() string { return proto.CompactTextString(m) }
func (*Random) ProtoMessage()    {}
func (*Random) Descriptor() ([]byte, []int) {
	return fileDescriptor_ee7c418402e21a3f, []int{0}
}

func (m *Random) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Random.Unmarshal(m, b)
}
func (m *Random) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Random.Marshal(b, m, deterministic)
}
func (m *Random) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Random.Merge(m, src)
}
func (m *Random) XXX_Size() int {
	return xxx_messageInfo_Random.Size(m)
}
func (m *Random) XXX_DiscardUnknown() {
	xxx_messageInfo_Random.DiscardUnknown(m)
}

var xxx_messageInfo_Random proto.InternalMessageInfo

func (m *Random) GetRandomString() string {
	if m != nil {
		return m.RandomString
	}
	return ""
}

func (m *Random) GetRandomInt() int32 {
	if m != nil {
		return m.RandomInt
	}
	return 0
}

func init() {
	proto.RegisterType((*Random)(nil), "pb.Random")
}

func init() { proto.RegisterFile("random.proto", fileDescriptor_ee7c418402e21a3f) }

var fileDescriptor_ee7c418402e21a3f = []byte{
	// 130 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x29, 0x4a, 0xcc, 0x4b,
	0xc9, 0xcf, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2a, 0x48, 0x52, 0xf2, 0xe2, 0x62,
	0x0b, 0x02, 0x8b, 0x09, 0x29, 0x71, 0xf1, 0x40, 0x58, 0xc1, 0x25, 0x45, 0x99, 0x79, 0xe9, 0x12,
	0x8c, 0x0a, 0x8c, 0x1a, 0x9c, 0x41, 0x28, 0x62, 0x42, 0x32, 0x5c, 0x9c, 0x10, 0xbe, 0x67, 0x5e,
	0x89, 0x04, 0x93, 0x02, 0xa3, 0x06, 0x6b, 0x10, 0x42, 0xc0, 0xc8, 0x82, 0x8b, 0x17, 0xaa, 0x3a,
	0xb5, 0xa8, 0x2c, 0x33, 0x39, 0x55, 0x48, 0x9d, 0x8b, 0xdb, 0x25, 0x3f, 0x38, 0x3f, 0x37, 0xb5,
	0x24, 0x03, 0xa4, 0x9b, 0x4b, 0xaf, 0x20, 0x49, 0x0f, 0xa2, 0x42, 0x0a, 0x89, 0xad, 0xc4, 0x90,
	0xc4, 0x06, 0x76, 0x90, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0x05, 0x98, 0x28, 0xcf, 0xa0, 0x00,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RandomServiceClient is the client API for RandomService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RandomServiceClient interface {
	DoSomething(ctx context.Context, in *Random, opts ...grpc.CallOption) (*Random, error)
}

type randomServiceClient struct {
	cc *grpc.ClientConn
}

func NewRandomServiceClient(cc *grpc.ClientConn) RandomServiceClient {
	return &randomServiceClient{cc}
}

func (c *randomServiceClient) DoSomething(ctx context.Context, in *Random, opts ...grpc.CallOption) (*Random, error) {
	out := new(Random)
	err := c.cc.Invoke(ctx, "/pb.RandomService/DoSomething", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RandomServiceServer is the server API for RandomService service.
type RandomServiceServer interface {
	DoSomething(context.Context, *Random) (*Random, error)
}

func RegisterRandomServiceServer(s *grpc.Server, srv RandomServiceServer) {
	s.RegisterService(&_RandomService_serviceDesc, srv)
}

func _RandomService_DoSomething_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Random)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RandomServiceServer).DoSomething(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.RandomService/DoSomething",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RandomServiceServer).DoSomething(ctx, req.(*Random))
	}
	return interceptor(ctx, in, info, handler)
}

var _RandomService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.RandomService",
	HandlerType: (*RandomServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DoSomething",
			Handler:    _RandomService_DoSomething_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "random.proto",
}
